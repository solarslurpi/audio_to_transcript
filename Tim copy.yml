openapi: 3.1.0
info:
  title: Tim, The Audio To Text Service
  version: 0.0.1
servers:
  - url:  https://odd-plants-lay.loca.lt
paths:
  /:
    get:
      summary: Root Endpoint
      description: Returns a greeting message from the server.
      operationId: root
      responses:
        '200':
          description: A JSON object with a greeting message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hello from Tim!"
  /transcribe/mp3:
    post:
      summary: Transcribe MP3 file
      operationId: transcribeAudio
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: MP3 file to be transcribed.
                model_name:
                  type: string
                  description: Key corresponding to the transcription model to use.
                  enum:
                    - tiny
                    - tiny.en
                    - base
                    - base.en
                    - small
                    - small.en
                    - medium
                    - medium.en
                    - large
                    - large-v2
                compute_type:
                  type: string
                  description: Key indicating the compute type for the transcription process.
                  enum:
                    - default
                    - float16
                    - float32
              required:
                - file
      responses:
        '200':
          description: Transcription initiated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: string
                    description: Unique identifier for the transcription task.
                  message:
                    type: string
                    description: Confirmation message.
        '400':
          description: Invalid request parameters.
  /status/{task_id}/stream:
    get:
      summary: Get updates for a transcription task via SSE
      operationId: getTranscriptionStatus
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: string
          description: Unique identifier for the transcription task.
      responses:
        '200':
          description: Stream of status updates.
          content:
            text/event-stream:
              schema:
                type: string
        '404':
          description: Task not found.
  /download/{taskid}:
    get:
      summary: Download a transcription file
      operationId: downloadTranscriptionFile
      parameters:
        - in: path
          name: filename
          required: true
          schema:
            type: string
          description: The name of the file to download.
      responses:
        '200':
          description: The transcription file is returned.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
              description: Indicates the filename that the downloaded file should have.
        '404':
          description: File not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "File not found"

